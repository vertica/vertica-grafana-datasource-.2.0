{"version":3,"sources":["../../src/rules/requireParam.js"],"names":["rootNamer","desiredRoots","currentIndex","name","idx","incremented","length","base","suffix","shift","jsdoc","utils","context","functionParameterNames","getFunctionParameterNames","preferredTagName","getPreferredTagName","tagName","jsdocParameterNames","getJsdocTagsDeep","shallowJsdocParameterNames","filter","tag","includes","map","avoidDocs","hasTag","autoIncrementBase","checkRestProperty","checkDestructured","checkTypesPattern","enableFixer","enableRootFixer","enableRestElementFixer","unnamedRootBase","options","lastSlashPos","lastIndexOf","checkTypesRegex","RegExp","slice","missingTags","flattenedRoots","flattenRoots","names","paramIndex","forEach","cur","findExpectedIndex","jsdocTags","indexAtFunctionParams","remainingRoots","foundIndex","findIndex","newAdd","some","remainingRoot","Array","isArray","paramTags","nextRootName","namer","functionParameterName","functionParameterIdx","inc","matchedJsdoc","rootName","type","search","hasRestElement","hasPropertyRest","rests","paramName","find","fpn","emptyParamIdx","push","remove","_","has","fullParamName","undefined","funcParamName","restElement","fix","tags","splice","expectedIdx","fixer","missingTag","reportJSDoc","contextDefaults","meta","docs","description","fixable","schema","additionalProperties","properties","default","checkConstructors","checkGetters","checkSetters","contexts","items","exemptedBy"],"mappings":";;;;;;;AAAA;;AACA;;;;AAGA,MAAMA,SAAS,GAAG,CAACC,YAAD,EAAyBC,YAAzB,KAAqD;AACrE,MAAIC,IAAJ;AACA,MAAIC,GAAG,GAAGF,YAAV;AACA,QAAMG,WAAW,GAAGJ,YAAY,CAACK,MAAb,IAAuB,CAA3C;;AACA,MAAID,WAAJ,EAAiB;AACf,UAAME,IAAI,GAAGN,YAAY,CAAC,CAAD,CAAzB;AACA,UAAMO,MAAM,GAAGJ,GAAG,EAAlB;AACAD,IAAAA,IAAI,GAAI,GAAEI,IAAK,GAAEC,MAAO,EAAxB;AACD,GAJD,MAIO;AACLL,IAAAA,IAAI,GAAGF,YAAY,CAACQ,KAAb,EAAP;AACD;;AAED,SAAO,CAACN,IAAD,EAAOE,WAAP,EAAoB,MAAM;AAC/B,WAAOL,SAAS,CAACC,YAAD,EAAeG,GAAf,CAAhB;AACD,GAFM,CAAP;AAGD,CAfD;;eAiBe,2BAAa,CAAC;AAC3BM,EAAAA,KAD2B;AAE3BC,EAAAA,KAF2B;AAG3BC,EAAAA;AAH2B,CAAD,KAItB;AACJ,QAAMC,sBAAsB,GAAGF,KAAK,CAACG,yBAAN,EAA/B;AACA,QAAMC,gBAAgB,GAAGJ,KAAK,CAACK,mBAAN,CAA0B;AAACC,IAAAA,OAAO,EAAE;AAAV,GAA1B,CAAzB;;AACA,MAAI,CAACF,gBAAL,EAAuB;AACrB;AACD;;AACD,QAAMG,mBAAmB,GAAGP,KAAK,CAACQ,gBAAN,CAAuBJ,gBAAvB,CAA5B;AAEA,QAAMK,0BAA0B,GAAGF,mBAAmB,CAACG,MAApB,CAA4BC,GAAD,IAAS;AACrE,WAAO,CAACA,GAAG,CAACnB,IAAJ,CAASoB,QAAT,CAAkB,GAAlB,CAAR;AACD,GAFkC,EAEhCC,GAFgC,CAE5B,CAACF,GAAD,EAAMlB,GAAN,KAAc;AACnB,WAAO,EAAC,GAAGkB,GAAJ;AACLlB,MAAAA;AADK,KAAP;AAED,GALkC,CAAnC;;AAOA,MAAIO,KAAK,CAACc,SAAN,EAAJ,EAAuB;AACrB;AACD,GAjBG,CAmBJ;;;AACA,MAAId,KAAK,CAACe,MAAN,CAAa,MAAb,CAAJ,EAA0B;AACxB;AACD;;AAED,QAAM;AACJC,IAAAA,iBAAiB,GAAG,CADhB;AAEJC,IAAAA,iBAAiB,GAAG,KAFhB;AAGJC,IAAAA,iBAAiB,GAAG,IAHhB;AAIJC,IAAAA,iBAAiB,GAAG,gEAJhB;AAKJC,IAAAA,WAAW,GAAG,IALV;AAMJC,IAAAA,eAAe,GAAG,IANd;AAOJC,IAAAA,sBAAsB,GAAG,IAPrB;AAQJC,IAAAA,eAAe,GAAG,CAAC,MAAD;AARd,MASFtB,OAAO,CAACuB,OAAR,CAAgB,CAAhB,KAAsB,EAT1B;AAWA,QAAMC,YAAY,GAAGN,iBAAiB,CAACO,WAAlB,CAA8B,GAA9B,CAArB;AACA,QAAMC,eAAe,GAAGF,YAAY,KAAK,CAAC,CAAlB,GACtB,IAAIG,MAAJ,CAAWT,iBAAX,CADsB,GAEtB,IAAIS,MAAJ,CAAWT,iBAAiB,CAACU,KAAlB,CAAwB,CAAxB,EAA2BJ,YAA3B,CAAX,EAAqDN,iBAAiB,CAACU,KAAlB,CAAwBJ,YAAY,GAAG,CAAvC,CAArD,CAFF;AAIA,QAAMK,WAAW,GAAG,EAApB;AACA,QAAMC,cAAc,GAAG/B,KAAK,CAACgC,YAAN,CAAmB9B,sBAAnB,EAA2C+B,KAAlE;AAEA,QAAMC,UAAU,GAAG,EAAnB;AACAH,EAAAA,cAAc,CAACI,OAAf,CAAuB,CAACC,GAAD,EAAM3C,GAAN,KAAc;AACnCyC,IAAAA,UAAU,CAACE,GAAD,CAAV,GAAkB3C,GAAlB;AACD,GAFD;;AAIA,QAAM4C,iBAAiB,GAAG,CAACC,SAAD,EAAYC,qBAAZ,KAAsC;AAC9D,UAAMC,cAAc,GAAGtC,sBAAsB,CAAC2B,KAAvB,CAA6BU,qBAAqB,IAAI,CAAtD,CAAvB;AACA,UAAME,UAAU,GAAGH,SAAS,CAACI,SAAV,CAAoB,CAAC;AAAClD,MAAAA,IAAD;AAAOmD,MAAAA;AAAP,KAAD,KAAoB;AACzD,aAAO,CAACA,MAAD,IAAWH,cAAc,CAACI,IAAf,CAAqBC,aAAD,IAAmB;AACvD,YAAIC,KAAK,CAACC,OAAN,CAAcF,aAAd,CAAJ,EAAkC;AAChC,iBAAOA,aAAa,CAAC,CAAD,CAAb,CAAiBZ,KAAjB,CAAuBrB,QAAvB,CAAgCpB,IAAhC,CAAP;AACD;;AACD,YAAI,OAAOqD,aAAP,KAAyB,QAA7B,EAAuC;AACrC,iBAAOrD,IAAI,KAAKqD,aAAa,CAACrD,IAA9B;AACD;;AAED,eAAOA,IAAI,KAAKqD,aAAhB;AACD,OATiB,CAAlB;AAUD,KAXkB,CAAnB;;AAaA,QAAIJ,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACnB,aAAOA,UAAP;AACD;;AAED,UAAMO,SAAS,GAAGV,SAAS,CAAC5B,MAAV,CAAiB,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAW;AAC5C,aAAOA,GAAG,KAAKP,gBAAf;AACD,KAFiB,CAAlB;AAIA,WAAO4C,SAAS,CAACrD,MAAjB;AACD,GAxBD;;AA0BA,MAAI,CAACsD,YAAD,EAAevD,WAAf,EAA4BwD,KAA5B,IAAqC7D,SAAS,CAAC,CAAC,GAAGkC,eAAJ,CAAD,EAAuBP,iBAAvB,CAAlD;AAEAd,EAAAA,sBAAsB,CAACiC,OAAvB,CAA+B,CAACgB,qBAAD,EAAwBC,oBAAxB,KAAiD;AAC9E,QAAIC,GAAJ;;AACA,QAAIP,KAAK,CAACC,OAAN,CAAcI,qBAAd,CAAJ,EAA0C;AACxC,YAAMG,YAAY,GAAG7C,0BAA0B,CAAC2C,oBAAD,CAA1B,IACnB7C,mBAAmB,CAAC6C,oBAAD,CADrB;AAGA,UAAIG,QAAJ;;AACA,UAAIJ,qBAAqB,CAAC,CAAD,CAAzB,EAA8B;AAC5BI,QAAAA,QAAQ,GAAGJ,qBAAqB,CAAC,CAAD,CAAhC;AACD,OAFD,MAEO,IAAIG,YAAY,IAAIA,YAAY,CAAC9D,IAAjC,EAAuC;AAC5C+D,QAAAA,QAAQ,GAAGD,YAAY,CAAC9D,IAAxB;;AACA,YAAI8D,YAAY,CAACE,IAAb,IAAqBF,YAAY,CAACE,IAAb,CAAkBC,MAAlB,CAAyB9B,eAAzB,MAA8C,CAAC,CAAxE,EAA2E;AACzE;AACD;AACF,OALM,MAKA;AACL4B,QAAAA,QAAQ,GAAGN,YAAX;AACAI,QAAAA,GAAG,GAAG3D,WAAN;AACA,SAACuD,YAAD,EAAevD,WAAf,EAA4BwD,KAA5B,IAAqCA,KAAK,EAA1C;AACD;;AAED,YAAM;AAACQ,QAAAA,cAAD;AAAiBC,QAAAA,eAAjB;AAAkCC,QAAAA,KAAlC;AAAyC3B,QAAAA;AAAzC,UAAkDkB,qBAAqB,CAAC,CAAD,CAA7E;;AACA,UAAI,CAAC7B,sBAAD,IAA2BoC,cAA/B,EAA+C;AAC7C;AACD;;AAEDzB,MAAAA,KAAK,CAACE,OAAN,CAAc,CAAC0B,SAAD,EAAYpE,GAAZ,KAAoB;AAChC;AACA;AACA,YAAI,CAACc,mBAAmB,CAACuD,IAApB,CAAyB,CAAC;AAACtE,UAAAA;AAAD,SAAD,KAAY;AACxC,iBAAOA,IAAI,KAAK+D,QAAhB;AACD,SAFI,CAAD,IAEE,CAACzB,WAAW,CAACgC,IAAZ,CAAiB,CAAC;AAACX,UAAAA,qBAAqB,EAAEY;AAAxB,SAAD,KAAkC;AACxD,iBAAOA,GAAG,KAAKR,QAAf;AACD,SAFM,CAFP,EAII;AACF,gBAAMS,aAAa,GAAGzD,mBAAmB,CAACmC,SAApB,CAA8B,CAAC;AAAClD,YAAAA;AAAD,WAAD,KAAY;AAC9D,mBAAO,CAACA,IAAR;AACD,WAFqB,CAAtB;;AAIA,cAAIwE,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtBlC,YAAAA,WAAW,CAACmC,IAAZ,CAAiB;AACfb,cAAAA,oBAAoB,EAAEY,aADP;AAEfb,cAAAA,qBAAqB,EAAEI,QAFR;AAGfF,cAAAA,GAHe;AAIfa,cAAAA,MAAM,EAAE;AAJO,aAAjB;AAMD,WAPD,MAOO;AACLpC,YAAAA,WAAW,CAACmC,IAAZ,CAAiB;AACfb,cAAAA,oBAAoB,EAAEe,gBAAEC,GAAF,CAAMlC,UAAN,EAAkBqB,QAAlB,IACpBrB,UAAU,CAACqB,QAAD,CADU,GAEpBrB,UAAU,CAAC2B,SAAD,CAHG;AAIfV,cAAAA,qBAAqB,EAAEI,QAJR;AAKfF,cAAAA;AALe,aAAjB;AAOD;AACF;;AAED,YAAI,CAACnC,iBAAL,EAAwB;AACtB;AACD;;AAED,YAAI,CAACD,iBAAD,IAAsB2C,KAAK,CAACnE,GAAD,CAA/B,EAAsC;AACpC;AACD;;AAED,cAAM4E,aAAa,GAAI,GAAEd,QAAS,IAAGM,SAAU,EAA/C;;AAEA,YAAItD,mBAAmB,IAAI,CAACA,mBAAmB,CAACuD,IAApB,CAAyB,CAAC;AAACtE,UAAAA;AAAD,SAAD,KAAY;AAC/D,iBAAOA,IAAI,KAAK6E,aAAhB;AACD,SAF2B,CAA5B,EAEI;AACFvC,UAAAA,WAAW,CAACmC,IAAZ,CAAiB;AACfb,YAAAA,oBAAoB,EAAElB,UAAU,CAACiB,qBAAqB,CAAC,CAAD,CAArB,GAA2BkB,aAA3B,GAA2CR,SAA5C,CADjB;AAEfV,YAAAA,qBAAqB,EAAEkB,aAFR;AAGfhB,YAAAA,GAHe;AAIfG,YAAAA,IAAI,EAAEE,cAAc,IAAI,CAACC,eAAnB,GAAqC,QAArC,GAAgDW;AAJvC,WAAjB;AAMD;AACF,OAlDD;AAoDA;AACD;;AACD,QAAIC,aAAJ;AACA,QAAIf,IAAJ;;AACA,QAAI,OAAOL,qBAAP,KAAiC,QAArC,EAA+C;AAC7C,UAAI,CAAC7B,sBAAD,IAA2B6B,qBAAqB,CAACqB,WAArD,EAAkE;AAChE;AACD;;AACDD,MAAAA,aAAa,GAAGpB,qBAAqB,CAAC3D,IAAtC;AACAgE,MAAAA,IAAI,GAAG,QAAP;AACD,KAND,MAMO;AACLe,MAAAA,aAAa,GAAGpB,qBAAhB;AACD;;AAED,QAAI5C,mBAAmB,IAAI,CAACA,mBAAmB,CAACuD,IAApB,CAAyB,CAAC;AAACtE,MAAAA;AAAD,KAAD,KAAY;AAC/D,aAAOA,IAAI,KAAK+E,aAAhB;AACD,KAF2B,CAA5B,EAEI;AACFzC,MAAAA,WAAW,CAACmC,IAAZ,CAAiB;AACfb,QAAAA,oBAAoB,EAAElB,UAAU,CAACqC,aAAD,CADjB;AAEfpB,QAAAA,qBAAqB,EAAEoB,aAFR;AAGflB,QAAAA,GAHe;AAIfG,QAAAA;AAJe,OAAjB;AAMD;AACF,GArGD;;AAuGA,QAAMiB,GAAG,GAAG,CAAC;AACXrB,IAAAA,oBADW;AACWD,IAAAA,qBADX;AACkCe,IAAAA,MADlC;AAC0Cb,IAAAA,GAD1C;AAC+CG,IAAAA;AAD/C,GAAD,EAETkB,IAFS,KAEA;AACV,QAAIrB,GAAG,IAAI,CAAChC,eAAZ,EAA6B;AAC3B;AACD;;AACD,QAAI6C,MAAJ,EAAY;AACVQ,MAAAA,IAAI,CAACC,MAAL,CAAYvB,oBAAZ,EAAkC,CAAlC,EAAqC;AACnC5D,QAAAA,IAAI,EAAE2D,qBAD6B;AAEnCR,QAAAA,MAAM,EAAE,IAF2B;AAGnChC,QAAAA,GAAG,EAAEP,gBAH8B;AAInCoD,QAAAA;AAJmC,OAArC;AAMD,KAPD,MAOO;AACL,YAAMoB,WAAW,GAAGvC,iBAAiB,CAACqC,IAAD,EAAOtB,oBAAP,CAArC;AACAsB,MAAAA,IAAI,CAACC,MAAL,CAAYC,WAAZ,EAAyB,CAAzB,EAA4B;AAC1BpF,QAAAA,IAAI,EAAE2D,qBADoB;AAE1BR,QAAAA,MAAM,EAAE,IAFkB;AAG1BhC,QAAAA,GAAG,EAAEP,gBAHqB;AAI1BoD,QAAAA;AAJ0B,OAA5B;AAMD;AACF,GAtBD;;AAwBA,QAAMqB,KAAK,GAAG,MAAM;AAClB,QAAI,CAAC9E,KAAK,CAAC2E,IAAX,EAAiB;AACf3E,MAAAA,KAAK,CAAC2E,IAAN,GAAa,EAAb;AACD;;AAED5C,IAAAA,WAAW,CAACK,OAAZ,CAAqB2C,UAAD,IAAgB;AAClCL,MAAAA,GAAG,CAACK,UAAD,EAAa/E,KAAK,CAAC2E,IAAnB,CAAH;AACD,KAFD;AAGD,GARD;;AAUA5C,EAAAA,WAAW,CAACK,OAAZ,CAAoB,CAAC;AAACgB,IAAAA;AAAD,GAAD,KAA6B;AAC/CnD,IAAAA,KAAK,CAAC+E,WAAN,CACG,kBAAiB3E,gBAAiB,KAAI+C,qBAAsB,gBAD/D,EAEE,IAFF,EAGE/B,WAAW,GAAGyD,KAAH,GAAW,IAHxB;AAKD,GAND;AAOD,CAhOc,EAgOZ;AACDG,EAAAA,eAAe,EAAE,IADhB;AAEDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KADF;AAIJC,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,oBAAoB,EAAE,KADxB;AAEEC,MAAAA,UAAU,EAAE;AACVvE,QAAAA,iBAAiB,EAAE;AACjBwE,UAAAA,OAAO,EAAE,CADQ;AAEjBhC,UAAAA,IAAI,EAAE;AAFW,SADT;AAKViC,QAAAA,iBAAiB,EAAE;AACjBD,UAAAA,OAAO,EAAE,IADQ;AAEjBhC,UAAAA,IAAI,EAAE;AAFW,SALT;AASVtC,QAAAA,iBAAiB,EAAE;AACjBsC,UAAAA,IAAI,EAAE;AADW,SATT;AAYVkC,QAAAA,YAAY,EAAE;AACZF,UAAAA,OAAO,EAAE,KADG;AAEZhC,UAAAA,IAAI,EAAE;AAFM,SAZJ;AAgBVvC,QAAAA,iBAAiB,EAAE;AACjBuE,UAAAA,OAAO,EAAE,KADQ;AAEjBhC,UAAAA,IAAI,EAAE;AAFW,SAhBT;AAoBVmC,QAAAA,YAAY,EAAE;AACZH,UAAAA,OAAO,EAAE,KADG;AAEZhC,UAAAA,IAAI,EAAE;AAFM,SApBJ;AAwBVrC,QAAAA,iBAAiB,EAAE;AACjBqC,UAAAA,IAAI,EAAE;AADW,SAxBT;AA2BVoC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,KAAK,EAAE;AACLrC,YAAAA,IAAI,EAAE;AADD,WADC;AAIRA,UAAAA,IAAI,EAAE;AAJE,SA3BA;AAiCVpC,QAAAA,WAAW,EAAE;AACXoC,UAAAA,IAAI,EAAE;AADK,SAjCH;AAoCVlC,QAAAA,sBAAsB,EAAE;AACtBkC,UAAAA,IAAI,EAAE;AADgB,SApCd;AAuCVnC,QAAAA,eAAe,EAAE;AACfmC,UAAAA,IAAI,EAAE;AADS,SAvCP;AA0CVsC,QAAAA,UAAU,EAAE;AACVD,UAAAA,KAAK,EAAE;AACLrC,YAAAA,IAAI,EAAE;AADD,WADG;AAIVA,UAAAA,IAAI,EAAE;AAJI,SA1CF;AAgDVjC,QAAAA,eAAe,EAAE;AACfsE,UAAAA,KAAK,EAAE;AACLrC,YAAAA,IAAI,EAAE;AADD,WADQ;AAIfA,UAAAA,IAAI,EAAE;AAJS;AAhDP,OAFd;AAyDEA,MAAAA,IAAI,EAAE;AAzDR,KADM,CALJ;AAkEJA,IAAAA,IAAI,EAAE;AAlEF;AAFL,CAhOY,C","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\n\ntype T = [string, () => T];\nconst rootNamer = (desiredRoots: string[], currentIndex: number): T => {\n  let name;\n  let idx = currentIndex;\n  const incremented = desiredRoots.length <= 1;\n  if (incremented) {\n    const base = desiredRoots[0];\n    const suffix = idx++;\n    name = `${base}${suffix}`;\n  } else {\n    name = desiredRoots.shift();\n  }\n\n  return [name, incremented, () => {\n    return rootNamer(desiredRoots, idx);\n  }];\n};\n\nexport default iterateJsdoc(({\n  jsdoc,\n  utils,\n  context,\n}) => {\n  const functionParameterNames = utils.getFunctionParameterNames();\n  const preferredTagName = utils.getPreferredTagName({tagName: 'param'});\n  if (!preferredTagName) {\n    return;\n  }\n  const jsdocParameterNames = utils.getJsdocTagsDeep(preferredTagName);\n\n  const shallowJsdocParameterNames = jsdocParameterNames.filter((tag) => {\n    return !tag.name.includes('.');\n  }).map((tag, idx) => {\n    return {...tag,\n      idx};\n  });\n\n  if (utils.avoidDocs()) {\n    return;\n  }\n\n  // Param type is specified by type in @type\n  if (utils.hasTag('type')) {\n    return;\n  }\n\n  const {\n    autoIncrementBase = 0,\n    checkRestProperty = false,\n    checkDestructured = true,\n    checkTypesPattern = '/^(?:[oO]bject|[aA]rray|PlainObject|Generic(?:Object|Array))$/',\n    enableFixer = true,\n    enableRootFixer = true,\n    enableRestElementFixer = true,\n    unnamedRootBase = ['root'],\n  } = context.options[0] || {};\n\n  const lastSlashPos = checkTypesPattern.lastIndexOf('/');\n  const checkTypesRegex = lastSlashPos === -1 ?\n    new RegExp(checkTypesPattern) :\n    new RegExp(checkTypesPattern.slice(1, lastSlashPos), checkTypesPattern.slice(lastSlashPos + 1));\n\n  const missingTags = [];\n  const flattenedRoots = utils.flattenRoots(functionParameterNames).names;\n\n  const paramIndex = {};\n  flattenedRoots.forEach((cur, idx) => {\n    paramIndex[cur] = idx;\n  });\n\n  const findExpectedIndex = (jsdocTags, indexAtFunctionParams) => {\n    const remainingRoots = functionParameterNames.slice(indexAtFunctionParams || 0);\n    const foundIndex = jsdocTags.findIndex(({name, newAdd}) => {\n      return !newAdd && remainingRoots.some((remainingRoot) => {\n        if (Array.isArray(remainingRoot)) {\n          return remainingRoot[1].names.includes(name);\n        }\n        if (typeof remainingRoot === 'object') {\n          return name === remainingRoot.name;\n        }\n\n        return name === remainingRoot;\n      });\n    });\n\n    if (foundIndex > -1) {\n      return foundIndex;\n    }\n\n    const paramTags = jsdocTags.filter(({tag}) => {\n      return tag === preferredTagName;\n    });\n\n    return paramTags.length;\n  };\n\n  let [nextRootName, incremented, namer] = rootNamer([...unnamedRootBase], autoIncrementBase);\n\n  functionParameterNames.forEach((functionParameterName, functionParameterIdx) => {\n    let inc;\n    if (Array.isArray(functionParameterName)) {\n      const matchedJsdoc = shallowJsdocParameterNames[functionParameterIdx] ||\n        jsdocParameterNames[functionParameterIdx];\n\n      let rootName;\n      if (functionParameterName[0]) {\n        rootName = functionParameterName[0];\n      } else if (matchedJsdoc && matchedJsdoc.name) {\n        rootName = matchedJsdoc.name;\n        if (matchedJsdoc.type && matchedJsdoc.type.search(checkTypesRegex) === -1) {\n          return;\n        }\n      } else {\n        rootName = nextRootName;\n        inc = incremented;\n        [nextRootName, incremented, namer] = namer();\n      }\n\n      const {hasRestElement, hasPropertyRest, rests, names} = functionParameterName[1];\n      if (!enableRestElementFixer && hasRestElement) {\n        return;\n      }\n\n      names.forEach((paramName, idx) => {\n        // Add root if the root name is not in the docs (and is not already\n        //  in the tags to be fixed)\n        if (!jsdocParameterNames.find(({name}) => {\n          return name === rootName;\n        }) && !missingTags.find(({functionParameterName: fpn}) => {\n          return fpn === rootName;\n        })) {\n          const emptyParamIdx = jsdocParameterNames.findIndex(({name}) => {\n            return !name;\n          });\n\n          if (emptyParamIdx > -1) {\n            missingTags.push({\n              functionParameterIdx: emptyParamIdx,\n              functionParameterName: rootName,\n              inc,\n              remove: true,\n            });\n          } else {\n            missingTags.push({\n              functionParameterIdx: _.has(paramIndex, rootName) ?\n                paramIndex[rootName] :\n                paramIndex[paramName],\n              functionParameterName: rootName,\n              inc,\n            });\n          }\n        }\n\n        if (!checkDestructured) {\n          return;\n        }\n\n        if (!checkRestProperty && rests[idx]) {\n          return;\n        }\n\n        const fullParamName = `${rootName}.${paramName}`;\n\n        if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n          return name === fullParamName;\n        })) {\n          missingTags.push({\n            functionParameterIdx: paramIndex[functionParameterName[0] ? fullParamName : paramName],\n            functionParameterName: fullParamName,\n            inc,\n            type: hasRestElement && !hasPropertyRest ? '...any' : undefined,\n          });\n        }\n      });\n\n      return;\n    }\n    let funcParamName;\n    let type;\n    if (typeof functionParameterName === 'object') {\n      if (!enableRestElementFixer && functionParameterName.restElement) {\n        return;\n      }\n      funcParamName = functionParameterName.name;\n      type = '...any';\n    } else {\n      funcParamName = functionParameterName;\n    }\n\n    if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n      return name === funcParamName;\n    })) {\n      missingTags.push({\n        functionParameterIdx: paramIndex[funcParamName],\n        functionParameterName: funcParamName,\n        inc,\n        type,\n      });\n    }\n  });\n\n  const fix = ({\n    functionParameterIdx, functionParameterName, remove, inc, type,\n  }, tags) => {\n    if (inc && !enableRootFixer) {\n      return;\n    }\n    if (remove) {\n      tags.splice(functionParameterIdx, 1, {\n        name: functionParameterName,\n        newAdd: true,\n        tag: preferredTagName,\n        type,\n      });\n    } else {\n      const expectedIdx = findExpectedIndex(tags, functionParameterIdx);\n      tags.splice(expectedIdx, 0, {\n        name: functionParameterName,\n        newAdd: true,\n        tag: preferredTagName,\n        type,\n      });\n    }\n  };\n\n  const fixer = () => {\n    if (!jsdoc.tags) {\n      jsdoc.tags = [];\n    }\n\n    missingTags.forEach((missingTag) => {\n      fix(missingTag, jsdoc.tags);\n    });\n  };\n\n  missingTags.forEach(({functionParameterName}) => {\n    utils.reportJSDoc(\n      `Missing JSDoc @${preferredTagName} \"${functionParameterName}\" declaration.`,\n      null,\n      enableFixer ? fixer : null,\n    );\n  });\n}, {\n  contextDefaults: true,\n  meta: {\n    docs: {\n      description: 'Requires that all function parameters are documented.',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          autoIncrementBase: {\n            default: 0,\n            type: 'integer',\n          },\n          checkConstructors: {\n            default: true,\n            type: 'boolean',\n          },\n          checkDestructured: {\n            type: 'boolean',\n          },\n          checkGetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkRestProperty: {\n            default: false,\n            type: 'boolean',\n          },\n          checkSetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkTypesPattern: {\n            type: 'string',\n          },\n          contexts: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          enableFixer: {\n            type: 'boolean',\n          },\n          enableRestElementFixer: {\n            type: 'boolean',\n          },\n          enableRootFixer: {\n            type: 'boolean',\n          },\n          exemptedBy: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          unnamedRootBase: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"requireParam.js"}