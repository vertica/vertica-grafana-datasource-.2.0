{"version":3,"file":"CodeEditor.production.js","sources":["../compiled/components/Monaco/suggestions.js","../compiled/components/Monaco/CodeEditor.js"],"sourcesContent":["import { __assign, __values } from \"tslib\";\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport { CodeEditorSuggestionItemKind } from './types';\n/**\n * @internal -- only exported for tests\n */\nexport function findInsertIndex(line) {\n    for (var i = line.length - 1; i > 0; i--) {\n        var ch = line.charAt(i);\n        if (ch === '$') {\n            return {\n                index: i,\n                prefix: line.substring(i),\n            };\n        }\n        // Keep these seperators\n        if (ch === ' ' || ch === '\\t' || ch === '\"' || ch === \"'\") {\n            return {\n                index: i + 1,\n                prefix: line.substring(i + 1),\n            };\n        }\n    }\n    return {\n        index: 0,\n        prefix: line,\n    };\n}\nfunction getCompletionItems(prefix, suggestions, range) {\n    var e_1, _a;\n    var _b;\n    var items = [];\n    try {\n        for (var suggestions_1 = __values(suggestions), suggestions_1_1 = suggestions_1.next(); !suggestions_1_1.done; suggestions_1_1 = suggestions_1.next()) {\n            var suggestion = suggestions_1_1.value;\n            if (prefix && !suggestion.label.startsWith(prefix)) {\n                continue; // skip non-matching suggestions\n            }\n            items.push(__assign(__assign({}, suggestion), { kind: mapKinds(suggestion.kind), range: range, insertText: (_b = suggestion.insertText) !== null && _b !== void 0 ? _b : suggestion.label }));\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (suggestions_1_1 && !suggestions_1_1.done && (_a = suggestions_1.return)) _a.call(suggestions_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return items;\n}\nfunction mapKinds(sug) {\n    switch (sug) {\n        case CodeEditorSuggestionItemKind.Method:\n            return monaco.languages.CompletionItemKind.Method;\n        case CodeEditorSuggestionItemKind.Field:\n            return monaco.languages.CompletionItemKind.Field;\n        case CodeEditorSuggestionItemKind.Property:\n            return monaco.languages.CompletionItemKind.Property;\n        case CodeEditorSuggestionItemKind.Constant:\n            return monaco.languages.CompletionItemKind.Constant;\n        case CodeEditorSuggestionItemKind.Text:\n            return monaco.languages.CompletionItemKind.Text;\n    }\n    return monaco.languages.CompletionItemKind.Text;\n}\n/**\n * @alpha\n */\nexport function registerSuggestions(language, getSuggestions) {\n    if (!language || !getSuggestions) {\n        return undefined;\n    }\n    return monaco.languages.registerCompletionItemProvider(language, {\n        triggerCharacters: ['$'],\n        provideCompletionItems: function (model, position, context) {\n            var range = {\n                startLineNumber: position.lineNumber,\n                endLineNumber: position.lineNumber,\n                startColumn: position.column,\n                endColumn: position.column,\n            };\n            // Simple check if this was triggered by pressing `$`\n            if (context.triggerCharacter === '$') {\n                range.startColumn = position.column - 1;\n                return {\n                    suggestions: getCompletionItems('$', getSuggestions(), range),\n                };\n            }\n            // Find the replacement region\n            var currentLine = model.getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn: 1,\n                endLineNumber: position.lineNumber,\n                endColumn: position.column,\n            });\n            var _a = findInsertIndex(currentLine), index = _a.index, prefix = _a.prefix;\n            range.startColumn = index + 1;\n            var suggestions = getCompletionItems(prefix, getSuggestions(), range);\n            if (suggestions.length) {\n                // NOTE, this will replace any language provided suggestions\n                return { suggestions: suggestions };\n            }\n            // Default language suggestions\n            return undefined;\n        },\n    });\n}\n//# sourceMappingURL=suggestions.js.map","import { __extends } from \"tslib\";\nimport React from 'react';\nimport { withTheme } from '../../themes';\nimport { registerSuggestions } from './suggestions';\nimport ReactMonaco from 'react-monaco-editor';\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nvar UnthemedCodeEditor = /** @class */ (function (_super) {\n    __extends(UnthemedCodeEditor, _super);\n    function UnthemedCodeEditor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // This is replaced with a real function when the actual editor mounts\n        _this.getEditorValue = function () { return ''; };\n        _this.onBlur = function () {\n            var onBlur = _this.props.onBlur;\n            if (onBlur) {\n                onBlur(_this.getEditorValue());\n            }\n        };\n        _this.editorWillMount = function (m) {\n            var _a = _this.props, language = _a.language, getSuggestions = _a.getSuggestions;\n            if (getSuggestions) {\n                _this.completionCancel = registerSuggestions(language, getSuggestions);\n            }\n        };\n        _this.editorDidMount = function (editor) {\n            var _a = _this.props, onSave = _a.onSave, onEditorDidMount = _a.onEditorDidMount;\n            _this.getEditorValue = function () { return editor.getValue(); };\n            if (onSave) {\n                editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, function () {\n                    onSave(_this.getEditorValue());\n                });\n            }\n            if (onEditorDidMount) {\n                onEditorDidMount(editor);\n            }\n        };\n        return _this;\n    }\n    UnthemedCodeEditor.prototype.componentWillUnmount = function () {\n        if (this.completionCancel) {\n            this.completionCancel.dispose();\n        }\n    };\n    UnthemedCodeEditor.prototype.componentDidUpdate = function (oldProps) {\n        var _a = this.props, getSuggestions = _a.getSuggestions, language = _a.language;\n        if (getSuggestions) {\n            // Language changed\n            if (language !== oldProps.language) {\n                if (this.completionCancel) {\n                    this.completionCancel.dispose();\n                }\n                this.completionCancel = registerSuggestions(language, getSuggestions);\n            }\n        }\n    };\n    UnthemedCodeEditor.prototype.render = function () {\n        var _a;\n        var _b = this.props, theme = _b.theme, language = _b.language, width = _b.width, height = _b.height, showMiniMap = _b.showMiniMap, showLineNumbers = _b.showLineNumbers, readOnly = _b.readOnly;\n        var value = (_a = this.props.value) !== null && _a !== void 0 ? _a : '';\n        var longText = value.length > 100;\n        var options = {\n            wordWrap: 'off',\n            codeLens: false,\n            minimap: {\n                enabled: longText && showMiniMap,\n                renderCharacters: false,\n            },\n            readOnly: readOnly,\n            lineNumbersMinChars: 4,\n            lineDecorationsWidth: 0,\n            overviewRulerBorder: false,\n            automaticLayout: true,\n        };\n        if (!showLineNumbers) {\n            options.glyphMargin = false;\n            options.folding = false;\n            options.lineNumbers = 'off';\n            options.lineDecorationsWidth = 5; // left margin when not showing line numbers\n            options.lineNumbersMinChars = 0;\n        }\n        return (React.createElement(\"div\", { onBlur: this.onBlur },\n            React.createElement(ReactMonaco, { width: width, height: height, language: language, theme: theme.isDark ? 'vs-dark' : 'vs-light', value: value, options: options, editorWillMount: this.editorWillMount, editorDidMount: this.editorDidMount })));\n    };\n    return UnthemedCodeEditor;\n}(React.PureComponent));\nexport default withTheme(UnthemedCodeEditor);\n//# sourceMappingURL=CodeEditor.js.map"],"names":["getCompletionItems","prefix","suggestions","range","e_1","_a","_b","items","suggestions_1","__values","suggestions_1_1","next","done","suggestion","value","label","startsWith","push","__assign","kind","mapKinds","insertText","e_1_1","error","return","call","sug","CodeEditorSuggestionItemKind","Method","monaco.languages","CompletionItemKind","Field","Property","Constant","Text","registerSuggestions","language","getSuggestions","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","position","context","startLineNumber","lineNumber","endLineNumber","startColumn","column","endColumn","triggerCharacter","line","i","length","ch","charAt","index","substring","findInsertIndex","getValueInRange","UnthemedCodeEditor","_super","_this","apply","this","arguments","getEditorValue","onBlur","props","editorWillMount","m","completionCancel","editorDidMount","editor","onSave","onEditorDidMount","getValue","addCommand","monaco.KeyMod","CtrlCmd","monaco.KeyCode","KEY_S","__extends","prototype","componentWillUnmount","dispose","componentDidUpdate","oldProps","render","theme","width","height","showMiniMap","showLineNumbers","readOnly","options","wordWrap","codeLens","minimap","enabled","renderCharacters","lineNumbersMinChars","lineDecorationsWidth","overviewRulerBorder","automaticLayout","glyphMargin","folding","lineNumbers","React","createElement","ReactMonaco","isDark","PureComponent","withTheme"],"mappings":"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"}