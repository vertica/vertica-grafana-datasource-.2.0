"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CanvasRenderingContext2D = _interopRequireDefault(require("./CanvasRenderingContext2D"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Path2D.prototype
var Path2DFunc = ['addPath'];
var borrowedFromCanvas = ['closePath', 'moveTo', 'lineTo', 'bezierCurveTo', 'quadraticCurveTo', 'arc', 'arcTo', 'ellipse', 'rect'];

var Path2D =
/*#__PURE__*/
function () {
  function Path2D() {
    var _this = this;

    _classCallCheck(this, Path2D);

    _defineProperty(this, "_path", []);

    _defineProperty(this, "_events", []);

    _defineProperty(this, "_stackIndex", 0);

    _defineProperty(this, "_transformStack", [[1, 0, 0, 1, 0, 0]]);

    borrowedFromCanvas.forEach(function (key) {
      _this[key] = jest.fn(_CanvasRenderingContext2D["default"].prototype[key].bind(_this));
    });
    Path2DFunc.forEach(function (key) {
      _this[key] = jest.fn(_this[key].bind(_this));
    });
  }

  _createClass(Path2D, [{
    key: "addPath",
    value: function addPath(path) {
      if (arguments.length < 1) throw new TypeError('Failed to execute \'addPath\' on \'Path2D\': 1 argument required, but only 0 present.');
      if (!(path instanceof Path2D)) throw new TypeError('Failed to execute \'addPath\' on \'Path2D\': parameter 1 is not of type \'Path2D\'.');
      this._path = this._path.concat(path._path);
    }
  }]);

  return Path2D;
}();

exports["default"] = Path2D;